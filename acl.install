<?php
// $Id$


/**
* Implementation of hook_install().
*/
function acl_install() {
  drupal_install_schema('acl');
}

/**
 * Implementation of hook_schema().
 */
function acl_schema() {
  $schema['acl'] = array(
    'description'     => t('The base Access Control Lists table.'),
    'fields'          => array(
      'acl_id'        => array(
        'description' => t('Primary key: unique ACL ID.'),
        'type'        => 'serial', 
        'not null'    => TRUE),
      'module'        => array(
        'description' => t('The name of the module that created this ACL entry.'),
        'type'        => 'varchar',
        'length'      => 255),
      'name'          => array(
        'description' => t('A name (or other identifying information) for this ACL entry, given by the module that created it.'),
        'type'        => 'varchar',
        'length'      => 255)),
    'primary key'     => array('acl_id'),
  );
  $schema['acl_user'] = array(
    'description'     => t('Identifies {users} to which the referenced {acl} entry applies.'),
    'fields'          => array(
      'acl_id'        => array(
        'description' => t('The {acl}.acl_id of the entry.'),
        'type'        => 'int', 
        'not null'    => TRUE, 
        'default'     => 0),
      'uid'           => array(
        'description' => t('The {user}.uid to which this {acl} entry applies.'),
        'type'        => 'int', 
        'not null'    => TRUE, 
        'default'     => 0)),
    'primary key'     => array('acl_id', 'uid'),
    'indexes'         => array(
      'uid'           => array('uid')),
  );
  $schema['acl_node'] = array(
    'description'     => t('Identifies {node}s to which the referenced {acl} entry applies and defines the permissions granted.'),
    'fields'          => array(
      'acl_id'        => array(
        'description' => t('The {acl}.acl_id of the entry.'),
        'type'        => 'int', 
        'not null'    => TRUE, 
        'default'     => 0),
      'nid'           => array(
        'description' => t('The {node}.nid to grant permissions for.'),
        'type'        => 'int', 
        'not null'    => TRUE, 
        'default'     => 0),
      'grant_view'    => array(
        'description' => t('Whether to grant "view" permission.'),
        'type'        => 'int', 
        'size'        => 'tiny',
        'unsigned'    => TRUE,
        'not null'    => TRUE, 
        'default'     => 0),
      'grant_update'  => array(
        'description' => t('Whether to grant "update" permission.'),
        'type'        => 'int', 
        'size'        => 'tiny',
        'unsigned'    => TRUE,
        'not null'    => TRUE, 
        'default'     => 0),
      'grant_delete'  => array(
        'description' => t('Whether to grant "delete" permission.'),
        'type'        => 'int', 
        'size'        => 'tiny',
        'unsigned'    => TRUE,
        'not null'    => TRUE, 
        'default'     => 0)),
    'primary key'     => array('acl_id', 'nid'),
    'indexes'         => array(
      'nid'           => array('nid')),
  );
  return $schema;
}


/*
 * Implementation of hook_uninstall
 */
function acl_uninstall() {
  drupal_uninstall_schema('acl');
}

/**
 * Fixes primary keys
 */
function acl_update_2() {
  $ret = array();
  // drop the previously created indexes (except for acl_user.uid)
  db_drop_index($ret, 'acl', 'acl_id');
  db_drop_index($ret, 'acl_user', 'acl_id');
  db_drop_index($ret, 'acl_node', 'acl_id');
  db_drop_index($ret, 'acl_node', 'nid');
  // create new indexes (as primary keys this time)
  db_add_primary_key($ret, 'acl', array('acl_id'));
  db_add_primary_key($ret, 'acl_user', array('acl_id', 'uid'));
  db_add_primary_key($ret, 'acl_node', array('acl_id', 'nid'));
  return $ret;
}

/**
 * Put back acl_node(nid) index for deleting nodes and clean up {acl_node}.
 */
function acl_update_4() {
  $ret = array();
  db_add_index($ret, 'acl_node', 'nid', array('nid'));
  db_query("DELETE FROM {acl_node} WHERE nid NOT IN (SELECT nid FROM {node})");
  return $ret;
}

/**
 * Clean up {acl_user}.
 */
function acl_update_5() {
  $ret = array();
  db_query("DELETE FROM {acl_user} WHERE uid NOT IN (SELECT uid FROM {users})");
  return $ret;
}
